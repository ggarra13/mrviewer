Compiling mrViewer requires a number of dependencies:

- Ninja build system (optional)
- Ruby (any version older than 1.8)
- Boost 1.80 or later
- OpenEXR 3.1.5
- CTL 1.5.1 or later
- OpenEXR_CTL 1.0.1 or later
- FFMPEG 5 or later
	 - libass
	 - libfontconfig
	 - libfreetype
	 - libfribidi
	 - libgnutls
	 - libharfbuzz
	 - libtiff
	 - libturbojpg
	 - libogg
	 - libopus
	 - libpng
	 - libvorbis
	 - libvorbisenc
	 - libvpx
	 - libx264
	 - libx265
	 - libxml
	 - libwebp
	 - libz
	 - nasm
	 - yasm
- GLUT
- FLTK 1.4 (beta) or later
- ImageMagick 6.7.4 or later
- GLEW 1.11 or later
- TCLAP 1.2.1 or later
- SampleICC 1.6.8 or later
- OpenColorIO 1.1.1
- OpenImageIO 2.3.5
- libiconv
- libintl

Under Linux and macOS, the superbuild.sh script will call SuperBuild/runme.sh to compile all non system dependencies and install them in install-$OS-$RELEASE.  Then it will compile and bundle the main directory with the other runme.sh script in that main directory and place the main bundles in the main directory.  The executable will be placed in the BUILD/$OS-$RELEASE directory.

For compiling just the dependencies (SuperBuild directory) or just the main program, there are runme.sh scripts on each corresponding directory.

Testing the build on Linux or Windows (RUNNING mrViewer without installing):

run the ruby script:

utils/libs.rb

and it will install all dependencies.

The files vc14_win32_vars and vc14_win64_vars contain mingw bash definitions for compiling on the windows platform. They point to the dependencies directories on my machine.  You will need to modify the directories to point to your own file system.

For ffmpeg, you can build it with WSL or with the m-ab-s/media-autobuild_suite
(https://github.com/m-ab-s/media-autobuild_suite/archive/master.zip ).

You also need libiconv and libintl (gettext) for translations.  You can get them from: https://mlocati.github.io/articles/gettext-iconv-windows.html

To compile under windows, you need the Visual Studio 2019 Community Edition (tested) or later (untested).
Both the x86 and x64 version of mrViewer have been compiled with Visual Studio 2019.
