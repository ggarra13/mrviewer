Higher priority:

 * Make our GdkPixbuf dependency optional, for broader adoption in other communities (eg. OpenGL games). We'll want to use 
   ARGB internally. We'll keep the GdkPixbuf-based public interface around, but split up the libraries somewhat. We may want
   to use it to load PNGs/JPEGs/etc., but that piece of code's implementation will be flexible so that it isn't exclusively
   dependant on GdkPixbuf.

 * Areas in need of improvement:
	* multiImage
	* Text
		* Whitespace issues
		* "International" issues - bi-directional, top->bottom, etc.
		* Text along paths
		* Remove pango compeletly since it isn't thread safe nor does it support SVG text very well.
		* Create interface to allow text to be drawn by cairo directly if available
	* Fonts
		* CSS-defined fonts (do we want to support this?)
		* SVG fonts (do we want to support this?)

 * Improved GError support in the loader and error propegation, rather then the g_warnings that we currently use.
	 * Make error messages translatable (requires adding gettext).

Lower Priority:

 * Improvements to the rsvg-view application
	* Add panning
	* Add menus
	* Set a better size hint
	* Use cairo

 * Any SVG 1.2 features that we want to sneak in. SVG 1.2 conformance is not a priority. Top candidates include:
	* <pageSet>

 * Improved Gimp plugin (choose 1 of "A" or "B". "A" would be easier, but perhaps less compelling. Jimmac and Tigert would be estatic if we could do either.)
	* A) Store layer names, composite layers onto the Gimp itself
	* B) Implement a Gimp-based RsvgRender that drew SVGs in terms of Gimp's path, gradient, pattern, etc. APIs

* DOM interface, possibly javascript bindings.

* Animation, should be easier if DOM is done right.
