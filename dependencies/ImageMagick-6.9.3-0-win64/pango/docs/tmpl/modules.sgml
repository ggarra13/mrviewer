<!-- ##### SECTION Title ##### -->
Modules

<!-- ##### SECTION Short_Description ##### -->
Support for loadable modules

<!-- ##### SECTION Long_Description ##### -->
<para>
Functions and macros in this section are used to support loading dynamic
modules that add engines to Pango at run time.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### SECTION Image ##### -->


<!-- ##### STRUCT PangoIncludedModule ##### -->
<para>
The #PangoIncludedModule structure for a statically linked module 
contains the functions that would otherwise be loaded from a dynamically 
loaded module.
</para>

@list: a function that lists the engines defined in this module.
@init: a function to initialize the module.
@exit: a function to finalize the module.
@create: a function to create an engine, given the engine name.

<!-- ##### STRUCT PangoMap ##### -->
<para>
A #PangoMap structure can be used to determine the engine to
use for each character.
</para>


<!-- ##### STRUCT PangoMapEntry ##### -->
<para>
A #PangoMapEntry contains information about the engine that should be used 
for the codepoint to which this entry belongs and also whether the engine 
matches the language tag for this entry's map exactly or just approximately.
</para>


<!-- ##### FUNCTION pango_find_map ##### -->
<para>

</para>

@language: 
@engine_type_id: 
@render_type_id: 
@Returns: 


<!-- ##### FUNCTION pango_map_get_engine ##### -->
<para>

</para>

@map: 
@script: 
@Returns: 


<!-- ##### FUNCTION pango_map_get_engines ##### -->
<para>

</para>

@map: 
@script: 
@exact_engines: 
@fallback_engines: 


<!-- ##### FUNCTION pango_module_register ##### -->
<para>

</para>

@module: 


