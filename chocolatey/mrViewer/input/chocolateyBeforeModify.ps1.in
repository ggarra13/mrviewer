$ErrorActionPreference = 'Stop';

$softVersion = '@VERSION@'
$shortVersion = '@SHORTVERSION@'

$osBitness = Get-ProcessorBits

$packageName= 'mrViewer'
$toolsDir   = "$(Split-Path -parent $MyInvocation.MyCommand.Definition)"

If ( $osBitness -Match "32" )
{
	$programFiles = $env:ProgramFiles
}
Else
{
	$programFiles = $env:ProgramW6432
}


$target = Join-Path $programFiles "${packageName}-v*-Windows-${osBitness}"
Write-Host "Check targets '${target}'.";
cd $programFiles
Get-ChildItem -Path $programFiles -Filter "${packageName}-v*-Windows-${osBitness}" | ForEach-Object {
	      Write-Host "Removed $_"
	      rm -r -fo $_  
	      $PathToRemove = Join-Path $programFiles -childPath $_ | Join-Path -ChildPath "bin"
	      $Newpath = @{}
	      foreach ($path in [Environment]::GetEnvironmentVariable("PATH","Machine").split(';'))
	      {
		Write-Verbose "Comparing path '${path}' to '$PathToRemove'.";
		 If ($path)
		  {
		    If (($path -ine "$PathToRemove") -AND ($path -ine "$PathToRemove\"))
		    {
		    [string[]]$Newpath += "$path"
		    }
		  }
	      }
	      $AssembledNewPath = ($Newpath -join(';')).trimend(';')

	      Write-Debug "New PATH=${AssembledNewPath}"

	      [Environment]::SetEnvironmentVariable("PATH",$AssembledNewPath,"Machine")

	    }


$DesktopPath = [Environment]::GetFolderPath("CommonDesktopDirectory")
$StartMenu = [Environment]::GetFolderPath("CommonStartMenu")
$StartPath = Join-Path "$StartMenu" "Programs"

$ver = ${shortVersion}.split('.')

0..$ver[0] | %{ $first = [string]$_;
0..9 | %{ $second = [string]$_;
0..$ver[2] | %{ $third = [string]$_;
	   $num = $first + "." + $second + "." + $third
	   $desktop = "${DesktopPath}/${packageName}-${osBitness} v${num}.lnk";
	   $start = "${StartPath}/${packageName}-${osBitness} v${num}.lnk";
	   if ( Test-Path -Path "${desktop}" ) {
	      Write-Host "Removing desktop '${desktop}'";
	      rm -r -fo "${desktop}";
	       };
	   if ( Test-Path -Path "${start}" )   { rm -r -fo "${start}"; };
	   }
    }
}
