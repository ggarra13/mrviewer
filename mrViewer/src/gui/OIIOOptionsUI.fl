# data file for the Fltk User Interface Designer (fluid)
version 1.03
header_name {.h}
code_name {.cxx}
decl {\#include <iostream>} {private local
}

decl {\#include <core/mrvI8N.h>} {public local
}

decl {\#include <gui/mrvIO.h>} {public local
}


decl {\#include <core/mrvImageOpts.h>} {public local
}

decl {\#include <gui/mrvMainWindow.h>} {public local
}

decl {\#include <string>} {public local
}

decl {\#include <mrViewer.h>} {public local
}

class OIIOOptionsUI {open selected : {public mrv::OIIOOpts}
} {
  decl {std::string pixel_type;} {public local
  }
  Function {make_window(const std::string& ext, bool all_layers)} {open
  } {
    Fl_Window uiMain {
      label {OIIO Saving} open
      xywh {605 234 340 290} type Double resizable modal noborder visible
    } {
      Fl_Group {} {
        label {Image Options} open
        xywh {34 33 272 189} box UP_BOX
      } {
        Fl_Choice uiPixelType {
          label {Pixel Format}
          callback {pixel_type = o->child(o->value())->label();} open
          xywh {170 170 90 25} down_box BORDER_BOX
          class {mrv::Choice}
        } {
          MenuItem {} {
            label Float
            xywh {0 0 100 20}
          }
          MenuItem {} {
            label Half
            xywh {0 0 100 20}
          }
          MenuItem {} {
            label Integer
            xywh {0 0 100 20}
          }
          MenuItem {} {
            label Short
            xywh {0 0 100 20}
          }
          MenuItem {} {
            label Byte
            xywh {0 0 100 20}
          }
        }
        Fl_Light_Button uiAllLayers {
          label {All Layers}
          xywh {80 115 155 35}
          code0 {o->value( all_layers );}
        }
        Fl_Light_Button uiMipMap {
          label MipMap
          xywh {80 60 155 35}
          code0 {bool on = (ext == ".tx");
	    	       o->value( on );
		       if (on) o->activate();
		       else o->deactivate();}
        }
      }
      Fl_Button {} {
        label OK
        user_data this user_data_type {OIIOOptionsUI*}
        callback {v->active(true);
	v->uiMain->hide();
	}
        xywh {85 253 62 26}
      }
      Fl_Button {} {
        label Cancel
        user_data this user_data_type {OIIOOptionsUI*}
        callback {v->active(false);
	v->uiMain->hide();
	}
        xywh {164 253 68 26}
      }
      }
  }
  Function {convert()} {open
  } {
    code {if ( pixel_type == "" || pixel_type == _("Char") ) _pixel_type = mrv::image_type::kByte;
else if ( pixel_type == _("Float") ) _pixel_type = mrv::image_type::kFloat;
else if ( pixel_type == _("Short") ) _pixel_type = mrv::image_type::kShort;
else if ( pixel_type == _("Half") ) _pixel_type = mrv::image_type::kHalf;
else if ( pixel_type == _("Integer") ) _pixel_type = mrv::image_type::kInt;
_all_layers = uiAllLayers->value();
_mipmap = uiMipMap->value();} {}
  }
  Function {OIIOOptionsUI(const ViewerUI* main, const std::string& ext, bool all_layers) : OIIOOpts(all_layers)} {open
  } {
    code {Fl_Window* w = make_window(ext, all_layers);
      mrv::MainWindow* m = main->uiMain;
      int x = m->x() + ( m->w() - w->w() ) / 2;
      int y = m->y() + ( m->h() - w->h() ) / 2;
      w->set_modal();
      w->show();
      while ( w->visible() )
        Fl::check();
      convert();} {}
  }
}
