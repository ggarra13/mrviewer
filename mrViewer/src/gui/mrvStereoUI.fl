# data file for the FLTK User Interface Designer (FLUID)
version 2.1000 
images_dir fltk::Item 
header_name {.h} 
code_name {.cxx} 
gridx 5 
gridy 5 
snap 3
decl {\#include "gui/mrvIO.h"} {public
} 
decl {\#include "core/mrvI8N.h"} {public
} 

decl {\#include "fltk/visual.h"} {public
} 

decl {\#include "gui/mrvImageView.h"} {public
} 

decl {\#include "mrViewer.h"} {public
} 

namespace mrv {open
} {
  class StereoUI {open
  } {
    Function {make_window( mrv::ViewerUI* main )} {open
    } {
      {fltk::Window} uiMain {
        label {3D Stereo Options} open selected
        xywh {814 761 280 100}
        extra_code {o->child_of( (fltk::Window*)main->uiMain );} visible
      } {
        {fltk::Choice} uiStereoInput {
          label Input
          user_data main user_data_type {mrv::ViewerUI*}
          callback {mrv::media fg = v->uiView->foreground();

if ( fg )
{
CMedia* img = fg->image();
int x = o->value(); 
CMedia::StereoInput in = CMedia::to_stereo_input( x ); 
img->stereo_input( in );
}} open
          xywh {80 20 175 25}
          extra_code {mrv::media fg = main->uiView->foreground();

if ( fg )
{
CMedia* img = fg->image();
CMedia::StereoInput in = img->stereo_input();
int x = CMedia::from_stereo_input( in );
o->value( x ); 
}}
        } {
          {fltk::Item} {} {
            label {Separate layers}
            }
          {fltk::Item} {} {
            label {Top/bottom}
            }
          {fltk::Item} {} {
            label {Left/right}
            }
        }
        {fltk::Choice} uiStereoOutput {
          label Output
          user_data main user_data_type {mrv::ViewerUI*}
          callback {mrv::media fg = v->uiView->foreground();

if ( fg )
{
CMedia* img = fg->image();
int x = o->value(); 
CMedia::StereoOutput in = CMedia::to_stereo_output( x ); 
img->stereo_output( in );
v->uiView->fit_image();
}} open
          xywh {80 60 175 25}
          extra_code {mrv::media fg = main->uiView->foreground();

if ( fg )
{
CMedia* img = fg->image();
CMedia::StereoOutput in = img->stereo_output();
int x = CMedia::from_stereo_output( in );
o->value( x ); 
}}
        } {
          {fltk::Item} {} {
            label {No Stereo Output}
            }
          {fltk::Item} {} {
            label {Left view}
            }
          {fltk::Item} {} {
            label {Right view}
            }
          {fltk::Item} uiStereoOpenGL {
            label Stereo
            
            extra_code {if ( main->uiView->can_do( fltk::STEREO ) )
  uiStereoOpenGL->activate();
else
  uiStereoOpenGL->deactivate();}
          }
          {fltk::Item} {} {
            label {Top/bottom}
            }
          {fltk::Item} {} {
            label {Bottom/top}
            }
          {fltk::Item} {} {
            label {Left/right}
            }
          {fltk::Item} {} {
            label {Right/left}
            }
          {fltk::Item} {} {
            label {Even/odd rows}
            }
          {fltk::Item} {} {
            label {Even/odd columns}
            }
          {fltk::Item} {} {
            label {Checkerboard pattern}
            }
          {fltk::Item} {} {
            label {Red/cyan glasses}
            }
          {fltk::Item} {} {
            label {Cyan/red glasses}
            }
        }
      }
    }
    Function {StereoUI( ViewerUI* main )} {} {
      code {make_window(main);} {}
    }
    Function {~StereoUI()} {open
    } {
      code { delete uiMain; uiMain = NULL;} {}
    }
  }
} 
