# data file for the Fltk User Interface Designer (fluid)
version 1.0400
i18n_type 1
i18n_include <libintl.h>
i18n_function gettext
header_name header_name
code_name {.cxx}
decl {\#include <cstring>} {public local
}

decl {\#include <string>} {public local
}

decl {\#include "core/mrvI8N.h"} {private local
}

decl {\#include "gui/mrvMedia.h"} {public local
}

decl {\#include "gui/mrvFileRequester.h"} {public local
}

decl {\#include "gui/mrvLMTBrowser.h"} {public local
}

decl {\#include "mrViewer.h"} {private local
}

decl {class ViewerUI;} {public local
}

class LMTModifier {open
} {
  Function {make_window( const ViewerUI* main )} {open
  } {
    Fl_Window uiMain {open
      xywh {627 416 650 485} type Double resizable visible
    } {
      Fl_Group {} {open
        xywh {10 5 640 475}
      } {
        Fl_Browser uiLMTs {
          label {Look Mod Transforms}
          xywh {17 25 623 400} type Multi
          class {mrv::LMTBrowser}
        }
      }
      Fl_Button {} {
        label Add
        user_data main user_data_type {ViewerUI*}
        callback {mrv::ImageView* view = v->uiView;
mrv::media fg = view->foreground();
if (!fg) return;

CMedia* img = fg->image();
unsigned num = img->number_of_lmts();
attach_ctl_lmt_script( img, num, v );
uiLMTs->fill( fg );}
        xywh {15 440 105 30}
      }
      Fl_Button {} {
        label Remove
        user_data main user_data_type {ViewerUI*}
        callback {mrv::ImageView* view = v->uiView;
mrv::media fg = view->foreground();
if (!fg) return;

typedef std::vector< int > LMTs;
LMTs r;
Fl_Widget* w = uiLMTs->goto_top();
int i = 0;
for ( ; w; w = uiLMTs->next(), ++i )
{
   if ( w->selected() )
  {
    r.push_back( i );
  }
}


CMedia* img = fg->image();

LMTs::const_reverse_iterator s = r.rbegin();
LMTs::const_reverse_iterator e = r.rend();
for ( ; s != e; ++s )
{
  img->look_mod_transform( *s, NULL );
}
uiLMTs->fill( fg );} selected
        xywh {135 440 105 30}
      }
    }
  }
  Function {~LMTModifier()} {open
  } {}
  Function {LMTModifier( const ViewerUI* main )} {open
  } {
    code {make_window(main);
uiMain->child_of( main->uiView );
uiMain->show();} {}
  }
  Function {fill( const mrv::media fg )} {open
  } {
    code {uiLMTs->fill( fg );
uiLMTs->redraw();} {}
  }
}
