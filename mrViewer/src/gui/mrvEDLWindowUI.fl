# data file for the Fltk User Interface Designer (fluid)
version 1.0400
header_name {.h}
code_name {.cxx}
decl {\#include "mrvEDLGroup.h"} {public local
}

decl {\#include "mrViewer.h"} {public local
}

decl {\#include "FL/fl_ask.H"} {private local
}

decl {\#include "core/mrvI8N.h"} {private local
}

decl {\#include "gui/mrvTimeline.h"} {private local
}

decl {\#include "gui/mrvImageBrowser.h"} {private local
}

decl {\#include "gui/mrvChoice.h"} {private local
}

decl {\#include "gui/mrvMainWindow.h"} {private local
}

decl {\#include "mrvReelUI.h"} {private local
}

decl {\#include "gui/mrvImageView.h"} {private local
}

decl {\#include "icons/icons.c"} {private local
}

class EDLWindowUI {open
} {
  Function {make_window( ViewerUI* main )} {open
  } {
    Fl_Window uiMain {
      label {EDL Window} open
      xywh {288 581 1015 260} type Double resizable non_modal visible
    } {
      Fl_Group uiEDLRedraw {open
        xywh {95 40 1015 220} resizable
      } {
        Fl_Slider uiTimeline {
          user_data main user_data_type {ViewerUI*}
          callback {int64_t frame = (int64_t) o->value();
v->uiView->seek( frame );
v->uiEDLWindow->uiEDLGroup->redraw();}
          xywh {95 41 920 21} type Horizontal minimum 1 maximum 50 step 1 value 1
          code0 {o->main( main ); 
o->draw_cache( false );}
          class {mrv::Timeline}
        }
        Fl_Group uiEDLGroup {open selected
          xywh {95 65 920 185} resizable
          code0 {o->timeline( uiTimeline ); o->main( main );}
          class {mrv::EDLGroup}
        } {}
      }
      Fl_Group {} {
        xywh {5 35 95 205}
      } {
        Fl_Group {} {open
          xywh {5 48 95 72}
        } {
          Fl_Group {} {open
            xywh {10 48 85 31}
          } {
            Fl_Button {} {
              user_data {main->uiReelWindow->uiBrowser} user_data_type {mrv::ImageBrowser*}
              callback {v->open();
int idx = uiEDLChoiceOne->children()-1;
uiEDLChoiceOne->value( idx );}
              tooltip {Open a new reel} xywh {10 48 28 26}
              code0 {o->image( reel_24 );}
            }
            Fl_Button {} {
              user_data main user_data_type {ViewerUI*}
              callback {mrv::ImageBrowser* b = v->uiReelWindow->uiBrowser;
mrv::Choice* c = v->uiEDLWindow->uiEDLChoiceTwo;
if ( c->value() < 0 ) return;

b->reel( c->value() );
b->save_reel();}
              tooltip {Save current reel} xywh {37 48 28 26}
              code0 {o->image( reel_save_24 );}
            }
            Fl_Button {} {
              user_data main user_data_type {ViewerUI*}
              callback {mrv::ImageBrowser* b = v->uiReelWindow->uiBrowser;
mrv::Choice* c = v->uiEDLWindow->uiEDLChoiceOne;

int sel = c->value();
if ( sel < 0 ) return;

b->reel( sel );
b->remove_reel();}
              tooltip {Delete current reel} xywh {64 48 28 26}
              code0 {o->image( reel_delete_24 );}
            }
          }
          Fl_Choice uiEDLChoiceOne {
            label {Track \#0}
            user_data uiEDLGroup user_data_type {mrv::EDLGroup*}
            callback {if ( o->value() >= 0 && v->media_track(0) )
{
   v->media_track(0)->reel( o->value() );
   v->redraw();
}
else
{
   o->value(-1);
}}
            xywh {10 92 80 28} down_box BORDER_BOX align 5
            class {mrv::Choice}
          } {}
        }
        Fl_Group {} {open
          xywh {5 132 95 93}
        } {
          Fl_Group {} {open
            xywh {10 135 85 32}
          } {
            Fl_Button {} {
              user_data {main->uiReelWindow->uiBrowser} user_data_type {mrv::ImageBrowser*}
              callback {v->open();
int idx = uiEDLChoiceTwo->children()-1;
uiEDLChoiceTwo->value( idx );}
              tooltip {Open a new reel} xywh {10 141 28 26}
              code0 {o->image( reel_24 );}
            }
            Fl_Button {} {
              user_data main user_data_type {ViewerUI*}
              callback {mrv::ImageBrowser* b = v->uiReelWindow->uiBrowser;
mrv::Choice* c = v->uiEDLWindow->uiEDLChoiceTwo;
if ( c->value() < 0 ) return;

b->reel( c->value() );
b->save_reel();}
              tooltip {Save current reel} xywh {37 141 28 26}
              code0 {o->image( reel_save_24 );}
            }
            Fl_Button {} {
              user_data main user_data_type {ViewerUI*}
              callback {mrv::ImageBrowser* b = v->uiReelWindow->uiBrowser;
mrv::Choice* c = v->uiEDLWindow->uiEDLChoiceTwo;

int sel = c->value();
if ( sel < 0 ) return;

b->reel( sel );
b->remove_reel();}
              tooltip {Delete current reel} xywh {64 141 28 26}
              code0 {o->image( reel_delete_24 );}
            }
          }
          Fl_Choice uiEDLChoiceTwo {
            label {Track \#1}
            user_data uiEDLGroup user_data_type {mrv::EDLGroup*}
            callback {if (o->value() >= 0 && v->media_track(1) )
{
  v->media_track(1)->reel( o->value() );
  v->redraw();
}
else
{
  o->value(-1);
}} open
            xywh {10 187 80 28} down_box BORDER_BOX align 5
            code0 {o->value( -1 );}
            class {mrv::Choice}
          } {}
        }
      }
      Fl_Group {} {
        xywh {116 7 109 33}
      } {
        Fl_Button {} {
          user_data {main->uiReelWindow->uiBrowser} user_data_type {mrv::ImageBrowser*}
          callback {const char* name = fl_input("Reel Name", "reel" );
if ( name == NULL ) return;
v->new_reel(name);}
          tooltip {Create a new reel or EDL track} xywh {116 11 25 26}
          code0 {o->image( reel_new_24 );}
        }
        Fl_Button {} {
          user_data main user_data_type {ViewerUI*}
          callback {v->uiEDLWindow->uiEDLGroup->cut( v->uiTimeline->value() );}
          tooltip {Cut Clip at current location} xywh {141 11 25 26}
          code0 {o->image( scissors );}
        }
        Fl_Button {} {
          user_data main user_data_type {ViewerUI*}
          callback {v->uiEDLWindow->uiEDLGroup->merge( v->uiTimeline->value() );}
          tooltip {Merge two clips near current location.  Clips must be of the same movie or sequence and the left clip must end where the right clip begins.} xywh {166 11 25 26}
          code0 {o->image( merge_tool );}
        }
        Fl_Button uiBGButton {
          label BG
          user_data {main->uiReelWindow->uiBrowser} user_data_type {mrv::ImageBrowser*}
          callback {v->change_background();}
          tooltip {Set selected reel images as background.} xywh {191 10 26 27} labelfont 1
        }
      }
    }
  }
  Function {EDLWindowUI( ViewerUI* m )} {} {
    code {Fl_Group::current( m->uiMain );
      make_window(m);} {}
  }
  Function {~EDLWindowUI()} {} {
    code {delete uiEDLGroup; uiEDLGroup = NULL;
delete uiMain; uiMain = NULL;} {}
  }
}
