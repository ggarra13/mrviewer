# data file for the FLTK User Interface Designer (FLUID)
version 2.1000 
images_dir fltk::Button 
header_name {.h} 
code_name {.cxx} 
gridx 5 
gridy 5 
snap 3
decl {\#include "core/mrvI8N.h"} {} 

decl {\#include "gui/mrvWaveform.h"} {} 

decl {\#include "gui/mrvMainWindow.h"} {} 

decl {\#include "mrViewer.h"} {} 

namespace mrv {open
} {
  decl {class Waveform;} {public
  }
  decl {class ViewerUI;} {public
  }
  class WaveformUI {open
  } {
    decl {mrv::ViewerUI* main_;} {}
    Function {make_window(ViewerUI* main)} {open private
    } {
      {fltk::Window} uiMain {
        label Waveform
        user_data this user_data_type {WaveformUI*}
        callback {v->main()->uiView->send_network( "WaveformWindow 0" );
o->hide();} open
        xywh {107 386 330 290} resizable
        extra_code {// Make the window transient
main_ = main;
o->child_of( main->uiMain );} visible
      } {
        {fltk::Group} {} {open
          xywh {5 5 323 274} resizable
        } {
          {fltk::Widget} uiWaveform {selected
            xywh {0 0 323 230} resizable
            extra_code {o->main( main );}
            class {mrv::Waveform}
          }
          {fltk::Group} {} {open
            xywh {0 234 321 40}
          } {
            {fltk::ValueSlider} {} {
              label Intensity
              callback {uiWaveform->intensity( o->value() );
uiWaveform->redraw();}
              xywh {20 11 280 25} align 1 value 0.04
            }
          }
        }
      }
    }
    Function {WaveformUI(ViewerUI* m)} {} {
      code {make_window( m );} {}
    }
    Function {~WaveformUI()} {open
    } {
      code {delete uiMain; uiMain = NULL;} {}
    }
    Function {main()} {open return_type {mrv::ViewerUI*}
    } {
      code {return main_;} {}
    }
  }
} 
