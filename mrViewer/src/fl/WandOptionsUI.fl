# data file for the Fltk User Interface Designer (fluid)
version 1.0303 
header_name {.h} 
code_name {.cxx}
decl {\#include <iostream>} {private local
} 

decl {\#include <core/mrvI8N.h>} {public local
} 

decl {\#include <gui/mrvIO.h>} {public local
} 

decl {\#include <gui/mrvDoubleWindow.h>} {public local
} 

decl {\#include "core/mrvImageOpts.h"} {public global
} 

decl {\#include <wand/MagickWand.h>} {public local
} 

decl {\#include <string>} {public local
} 

class WandOptionsUI {open : {public mrv::WandOpts}
} {
  decl {std::string pixel_type;} {public local
  }
  Function {make_window(bool aces, bool all_layers)} {open
  } {
    Fl_Window uiMain {
      label {ImageMagick Saving} open selected
      xywh {193 251 340 295} type Double resizable
      class mrvDoubleWindow modal noborder visible
    } {
      Fl_Group {} {
        label {Image Options} open
        xywh {34 33 272 193} box UP_BOX
      } {
        Fl_Choice uiPixelType {
          label {Pixel Format}
          callback {pixel_type = o->text(o->value());}
          xywh {185 170 90 25} down_box BORDER_BOX
        } {
          MenuItem {} {
            label Char
            xywh {0 0 100 20}
          }
          MenuItem {} {
            label Short
            xywh {0 0 100 20}
          }
          MenuItem {} {
            label Integer
            xywh {0 0 100 20}
          }
          MenuItem {} {
            label Float
            xywh {0 0 100 20}
          }
        }
        Fl_Light_Button uiAllLayers {
          label {All Layers}
          xywh {95 115 155 35}
          code0 {o->value( all_layers );}
        }
        Fl_Light_Button uiACESmetadata {
          label {ACES metadata}
          xywh {95 60 155 35}
          code0 {o->value( aces );}
        }
      }
      Fl_Button {} {
        label OK
        user_data this user_data_type {WandOptionsUI*}
        callback {v->active(true);
v->uiMain->make_exec_return(true);}
        xywh {85 257 62 27}
      }
      Fl_Button {} {
        label Cancel
        user_data this user_data_type {WandOptionsUI*}
        callback {v->active( false );
v->uiMain->make_exec_return(false);}
        xywh {164 257 68 27}
      }
    }
  }
  Function {convert()} {open
  } {
    code {if ( pixel_type == "" || pixel_type == _("Char") ) _pixel_type = CharPixel;
else if ( pixel_type == _("Float") ) _pixel_type = FloatPixel;
else if ( pixel_type == _("Short") ) _pixel_type = ShortPixel;
else if ( pixel_type == _("Integer") ) _pixel_type = IntegerPixel;
_ACESmetadata = uiACESmetadata->value();
_all_layers = uiAllLayers->value();} {}
  }
  Function {WandOptionsUI(bool aces, bool all_layers) : WandOpts(aces, all_layers)} {} {
    code {mrvDoubleWindow* w = make_window(aces, all_layers);
if ( w->exec() ) convert();} {}
  }
} 
