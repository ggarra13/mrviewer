// generated by Fast Light User Interface Designer (fluid) version 1.0303

#ifndef EXROptionsUI_h
#define EXROptionsUI_h
#include <FL/Fl.H>
#include <string>
#include <gui/mrvPreferences.h>
#include <gui/mrvDoubleWindow.h>
#include <gui/mrvIO.h>
#include <core/exrImage.h>
#include <core/mrvImageOpts.h>
#include <ImfCompression.h>
#include <ImfPixelType.h>
#include <FL/Fl_Group.H>
#include <FL/Fl_Choice.H>
#include <FL/Fl_Value_Slider.H>
#include <FL/Fl_Light_Button.H>
#include <FL/Fl_Button.H>

class EXROptionsUI : public mrv::EXROpts {
public:
  std::string compression; 
  std::string pixel_type; 
  mrvDoubleWindow* make_window(bool aces, bool all_layers);
  mrvDoubleWindow *uiMain;
  Fl_Choice *uiCompression;
  static Fl_Menu_Item menu_uiCompression[];
  Fl_Choice *uiPixelFormat;
  static Fl_Menu_Item menu_uiPixelFormat[];
  Fl_Value_Slider *uiDWACompression;
  Fl_Light_Button *uiAllLayers;
  Fl_Light_Button *uiACESmetadata;
private:
  inline void cb_OK_i(Fl_Button*, EXROptionsUI*);
  static void cb_OK(Fl_Button*, EXROptionsUI*);
  inline void cb_Cancel_i(Fl_Button*, EXROptionsUI*);
  static void cb_Cancel(Fl_Button*, EXROptionsUI*);
public:
  void convert();
  EXROptionsUI( bool aces = false, bool all_layers = false ) ;
};
#endif
