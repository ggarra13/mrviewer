!!FP1.0
# cgc version 3.0.0016, build date Feb 13 2011
# command line args: -I/media/Linux/code/applications/mrViewer/shaders -profile fp30
# source file: rgba.cg
#vendor NVIDIA Corporation
#version 3.0.0.16
#profile fp30
#program main
#semantic main.fgImage : TEXUNIT0
#semantic main.lut : TEXUNIT3
#semantic main.gain
#semantic main.gamma
#semantic main.channel
#semantic main.enableNormalization
#semantic main.normMin
#semantic main.normSpan
#semantic main.enableLut
#semantic main.lutF
#semantic main.lutMin
#semantic main.lutMax
#semantic main.lutM
#semantic main.lutT
#var float2 tc : $vin.TEXCOORD0 : TEX0 : 0 : 1
#var sampler2D fgImage : TEXUNIT0 : texunit 0 : 1 : 1
#var sampler3D lut : TEXUNIT3 : texunit 3 : 2 : 1
#var half gain :  : gain : 3 : 1
#var half gamma :  : gamma : 4 : 1
#var int channel :  : channel : 5 : 1
#var bool enableNormalization :  : enableNormalization : 6 : 1
#var half normMin :  : normMin : 7 : 1
#var half normSpan :  : normSpan : 8 : 1
#var bool enableLut :  : enableLut : 9 : 1
#var bool lutF :  : lutF : 10 : 1
#var half lutMin :  : lutMin : 11 : 1
#var half lutMax :  : lutMax : 12 : 1
#var half lutM :  : lutM : 13 : 1
#var half lutT :  : lutT : 14 : 1
#var half4 main.pixel : $vout.COLOR : COL : -1 : 1
#default gain = 1
#default gamma = 0.44995117
#default channel = 0
#default enableNormalization = 0
#default normMin = 0
#default normSpan = 1
#default enableLut = 0
#default lutF = 0
DECLARE enableNormalization = {0};
DECLARE normMin = {0};
DECLARE normSpan = {1};
DECLARE enableLut = {0};
DECLARE lutF = {0};
DECLARE lutMax;
DECLARE lutMin;
DECLARE lutT;
DECLARE lutM;
DECLARE gain = {1};
DECLARE gamma = {0.44995117};
DECLARE channel = {0};
TEX   H1, f[TEX0], TEX0, 2D;
ADDH  H0.xyz, H1, -normMin.x;
RCPH  H0.w, normSpan.x;
MOVXC RC.x, enableNormalization;
MULH  H1.xyz(NE.x), H0, H0.w;
MINH  H0.xyz, H1, lutMax.x;
MAXH  H0.xyz, H0, lutMin.x;
MOVH  H2.w, lutT.x;
RCPH  H3.w, lutF.x;
LG2H  H0.x, H0.x;
LG2H  H0.z, H0.z;
LG2H  H0.y, H0.y;
MULH  H0.xyz, H0, lutM.x;
MADH  H0.xyz, H0, {0.69335938}.x, H2.w;
MULH  H0.xyz, H0, lutF.x;
FLRH  H4.xyz, H0;
ADDH  H2.xyz, -H4, H0;
ADDH  H0.xyz, H4, {1}.x;
MULH  H0.xyw, H3.w, H0.yzzx;
MULH  H7.xyz, H4, H3.w;
TEX   H5.xyz, H0.wxyw, TEX3, 3D;
ADDH  H3.xyz, -H2, {1}.x;
MULH  H5.xyz, H2.x, H5;
MOVH  H4.yz, H0.xxyw;
MOVH  H4.x, H7;
TEX   H4.xyz, H4, TEX3, 3D;
MADH  H4.xyz, H3.x, H4, H5;
MULH  H6.xyz, H2.y, H4;
MOVH  H4.xy, H0.wxzw;
MOVH  H4.z, H7;
TEX   H4.xyz, H4, TEX3, 3D;
MULH  H5.xyz, H2.x, H4;
MOVH  H4.y, H0.x;
MOVH  H0.xz, H0.wyyw;
MOVH  H4.xz, H7;
TEX   H4.xyz, H4, TEX3, 3D;
MADH  H4.xyz, H4, H3.x, H5;
MOVH  H0.y, H7;
TEX   H0.xyz, H0, TEX3, 3D;
MULH  H5.xyz, H2.x, H0;
TEX   H0.xyz, H7, TEX3, 3D;
MADH  H5.xyz, H3.x, H0, H5;
MADH  H5.xyz, H3.y, H5, H6;
MOVH  H6.x, H0.w;
MOVX  H0.w, lutF.x;
MULXC HC.x, H0.w, enableLut;
MOVH  H6.yz, H7;
TEX   H6.xyz, H6, TEX3, 3D;
MULH  H6.xyz, H2.x, H6;
MULH  H4.xyz, H2.y, H4;
MADH  H0.xyz, H3.x, H0, H6;
MOVX  H0.w, {0}.x;
MADH  H0.xyz, H0, H3.y, H4;
MULH  H2.xyz, H2.z, H5;
MADH  H1.xyz(NE.x), H0, H3.z, H2;
MOVH  H2.xyz, H1;
POWH  H0.x, {2.71875}.x, H1.x;
POWH  H0.y, {2.71875}.x, H1.y;
POWH  H0.z, {2.71875}.x, H1.z;
MOVH  H2.xyz(NE.x), H0;
MINH  H0.xyz, H2, lutMax.x;
MAXH  H0.xyz, H0, lutMin.x;
SEQX  H0.w, lutF.x, H0;
MOVH  H1.xyz, H2;
MULXC HC.x, H0.w, enableLut;
LG2H  H0.x, H0.x;
LG2H  H0.z, H0.z;
LG2H  H0.y, H0.y;
MULH  H0.xyz, H0, lutM.x;
MADH  H1.xyz(NE.x), H0, {0.69335938}.x, H2.w;
TEX   R0.xyz, H1, TEX3, 3D;
POWR  H0.x, {2.718282}.x, R0.x;
MOVR  R0.x, {1};
SEQR  H0.w, channel.x, R0.x;
MOVR  R0.x, {2};
SEQR  H2.x, channel, R0;
POWR  H0.y, {2.718282}.x, R0.y;
POWR  H0.z, {2.718282}.x, R0.z;
MOVH  H1.xyz(NE.x), H0;
MULH  H0.xyz, H1, gain.x;
MOVXC RC.x, H0.w;
POWH  H1.x, H0.x, gamma.x;
POWH  H1.z, H0.z, gamma.x;
POWH  H1.y, H0.y, gamma.x;
MOVH  H0.xyz, H1;
MOVH  H0.xyz(NE.x), H1.x;
SEQX  H0.w, H0, {0}.x;
MOVH  H1.xyz, H0;
MULXC HC.x, H0.w, H2;
MOVH  H1.xyz(NE.x), H0.y;
MOVH  H0.xyz, H1;
SEQX  H1.x, H2, {0};
MOVR  R0.x, {3};
SEQR  H1.y, channel.x, R0.x;
MULX  H0.w, H0, H1.x;
MULXC HC.x, H0.w, H1.y;
SEQX  H1.x, H1.y, {0};
MOVR  R0.x, {4};
SEQR  H1.y, channel.x, R0.x;
MOVR  R0.x, {5};
SEQR  H2.x, channel, R0;
MOVH  H0.xyz(NE.x), H1.z;
MULX  H0.w, H0, H1.x;
MULXC HC.x, H0.w, H1.y;
MOVH  H0.xyz(NE.x), H1.w;
SEQX  H1.y, H1, {0}.x;
MULX  H0.w, H0, H1.y;
MOVH  H1.x, H0;
MULXC HC.x, H0.w, H2;
MULH  H1.x(NE), H0, {0.5};
MADH  H1.x(NE), H1.w, {0.5}, H1;
MOVH  H1.yz, H0;
ADDH  H0.x, H1, H0.y;
SEQX  H0.y, H2.x, {0}.x;
ADDH  H0.x, H0, H0.z;
MOVR  R0.x, {6};
MOVH  o[COLH].xyz, H1;
SEQR  H0.z, channel.x, R0.x;
MULX  H0.y, H0.w, H0;
MULXC HC.x, H0.y, H0.z;
MULH  o[COLH].xyz(NE.x), H0.x, {0.33333334}.x;
MOVH  o[COLH].w, H1;
END
# 122 instructions, 1 R-regs, 8 H-regs
